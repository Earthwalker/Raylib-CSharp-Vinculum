<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.1</TargetFramework>
        <LangVersion>10</LangVersion>
        <RootNamespace>ZeroElectric.Vinculum</RootNamespace>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    </PropertyGroup>

    <PropertyGroup>
        <GenerateDocumentationFile>True</GenerateDocumentationFile>
        <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
        <PackageOutputDir>..\..\Output\nuget-bin\</PackageOutputDir>
        <RepositoryUrl>https://github.com/ZeroElectric/Raylib-CSharp-Vinculum</RepositoryUrl>
        <Version>5.0</Version>
        <PackageReleaseNotes>
Release Notes: 
----------------------------------------------
5.0 (Nov 22 2023), Raylib 5.0 | RayGUI 4.0 
----------------------------------------------
 
Raylib and RayGUI Changes :

- Raylib 5.0
    - [BRAKING] REMOVED: GenImageGradientH() and GenImageGradientV()
    - [BRAKING] RENAMED: LoadFont*() parameter names for consistenc
    - ADDED: New Splines drawing and evaluation API
    - ADDED: IsKeyPressedRepeat() on PLATFORM_DESKTOP
    - ADDED: SetWindowMaxSize() for desktop and web
    - ADDED: LoadRandomSequence() / UnloadRandomSequence()
    - ADDED: DrawCircleLinesV()
    - ADDED: ExportImageToMemory()
    - ADDED: GenImageGradientSquare()
    - ADDED: GenImageLinearGradient()
    - ADDED: LoadSoundAlias()
    - ADDED: GetMasterVolume()
    - REDESIGNED: LoadOBJ(), to avoid mesh splitting by materials
    - REVIEWED: Support .vox model file version 200 
    - REVIEWED: Optimized and simplified  the gesture system 
    - And much much more

With over 95 function changed and additions be sure to read up on all of the changes over on raylib's' [CHANGELOG](https://github.com/raysan5/raylib/blob/master/CHANGELOG)!

- RayGUI 4.0
    - [BRAKING] REDESIGNED: Multiple functions and what they return, check out raygui 4.0's [CHANGELOG](https://github.com/raysan5/raygui/releases/tag/4.0) for a detailed list of changes
    - [BRAKING] REDESIGNED: All controls return result are now 'int'
    - ADDED: GuiToggleSlider()
    - ADDED: GuiColorPickerHSV() and GuiColorPanelHSV()
    - ADDED: Multiple new icons, mostly compiler related
    - ADDED: New enum values: GuiTextAlignment, GuiTextAlignmentVertical, GuiTextWrapMode

Vinculum Changes
- Added two new examples
    - SplinesDrawing
    - MixedAudioProcessing
- Created a Attributions file for example assets
- Optimized the layout of multiple of the examples
- Optimized port of rcamera, #6 
- Fixed .obj example files being missing
- Fixed a crash on Linux with the TestingProgram
- Fixed all examples with freecamera to behave properly

Known Issues:

- GuiCheckBox wrapper implementation does not have correct API, returns bool like the raygui 3.x API and not int.
- Many of the new API's do not have a managed sbyte* wrapper implementations.

----------------------------------------------
4.5.2 (May 11 2023), Raygui 3.6 
----------------------------------------------

- Better Linux support

Updated raygui to 3.6
- Added new icon: SAND_TIMER
- Added additional input support for `GuiTextBox()`
- Redesigned `GuiSlider*()` and `GuiScrollBar()` to support out-of-bounds
- Fixed a crash when moving the cursor on `GuiTextBox()`

4.5.1 (Apr 20 2023), Raygui 3.5 

Updated raygui to 3.5 
- Added new Tab Bar contorol `GuiTabBar()`, based upon `GuiToggle()`,
- Added helper functions to split text in separate lines,
- Added new icons useful for code editing tools,
- Redesigned `GuiTextBox()` to support cursor movement and `GuiDrawText()` to divide drawing by lines.

The following functions have been removed:
- REMOVED: Unneeded icon editing functions
- REMOVED: GuiTextBoxMulti(), very limited and broken
- REMOVED: MeasureTextEx() dependency, logic directly implemented
- REMOVED: DrawTextEx() dependency, logic directly implemented

4.5.0.1 (Apr 7 2023): 
- Added Linux support.

4.5.0 (Mar 18 2023):
- A simpler and more extendable Camera module (RayCamera a C# port of rcamera.h).
- Support for M3D models and M3D/GLTF animations, 
- Support for QOA audio format, 
- Added new data structures validation functions such as `IsImageReady()`, `IsTextureReady()`, `IsSoundReady()` &amp; more!
- Redesigned rlgl module for automatic render-batch limits checking and rshapes module to minimize the rlgl dependency.

The following functions have been removed or renamed:

- REMOVED: Multichannel audio API: PlaySoundMulti(), StopSoundMulti()
- REMOVED: UnloadModelKeepMeshes()
- REMOVED: DrawCubeTexture(), DrawCubeTextureRec(), functions moved to new example: `DrawCubeWithTexture`

- REMOVED: DrawTextureQud()
- REMOVED: DrawTexturePoly(), function moved to example: `textures_polygon`
- REMOVED: DrawTextureTiled(),function implementation moved to the textures_tiled.c

- RENAMED: TextCodepointsToUTF8() to LoadUTF8()
- RENAMED: GetCodepoint() -&gt; GetCodepointNext()

With more then 25 new functions and 40+ functions revsions make sure to check out raylib's [CHANGELOG](https://github.com/raysan5/raylib/blob/master/CHANGELOG) for a detailed list of changes in raylib 4.5

4.5.0-rc1: 
- Added RayCamera

4.5.0-dev-alpha: 
- Updated to Raylib 4.5-dev

4.2.0.0-alpha:
- Initial release of Raylib-CSharp-Vinculum, a C# binding for Raylib 4.2, supports Windows.
        </PackageReleaseNotes>
        <Authors>ZeroElectric;Minmoose</Authors>
        <Company>ZeroElectricGames</Company>
        <Description>
AutoGen C# bindings for Raylib 5.0 (https://github.com/raysan5/raylib), a simple and easy-to-use 2d/3d videogame framework, similar to XNA / MonoGame.
- Windows &amp; Linux supported.
- Supports net5+ 
- 1-1 bindings + convenience wrappers to make it easier to use.
- Includes bindings for all of Raylib's extras: RayGui, Easings, Physac, RlGl, RayMath &amp; RRES.
- Requires `unsafe` keyword.
- A focus on performance with minimal runtime allocations.
- A fork of Raylib-CsLo (https://github.com/NotNotTech/Raylib-CsLo).

Very few intellisense docs. 

You can read the Raylib cheatsheet for some help:
(https://www.raylib.com/cheatsheet/cheatsheet.html) 
Or view the examples:
(https://github.com/ZeroElectric/Raylib-CSharp-Vinculum/tree/main/Source/Raylib-CSharp-Vinculum.ExampleCore)
</Description>
        <PackageProjectUrl>https://github.com/ZeroElectric/Raylib-CSharp-Vinculum</PackageProjectUrl>
        <PackageTags>zeroelectric;raylib-cslo;raylib-csharp;vinculum;raylib-csharp-vinculum;raylib;gamedev;binding;rendering;3d;2d;graphics;opengl;physics;audio;</PackageTags>
        <PackageLicenseExpression>MPL-2.0</PackageLicenseExpression>
        <AssemblyVersion>5.0</AssemblyVersion>
        <Copyright>2022-2023 (C) ZeroElectric, Raylib-CsLo &amp; Contributors</Copyright>
        <PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
        <IsPublishable>False</IsPublishable>
        <RepositoryType>git</RepositoryType>
        <Title>Raylib CSharp Vinculum</Title>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageOutputPath>..\..\Output</PackageOutputPath>
        <PackageIcon>raylib-csharp-vinculum_logo_256x256.png</PackageIcon>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <Deterministic>False</Deterministic>
        <NoWarn>1701;1702;1591;IDE0073;</NoWarn>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
        <Deterministic>False</Deterministic>
        <NoWarn>1701;1702;1591;IDE0073;</NoWarn>
        <OutDir>..\..\Output\bin\</OutDir>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="CommunityToolkit.HighPerformance" Version="8.1.0" />
    </ItemGroup>

    <ItemGroup>
        <Content Include="runtimes\**">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
            <Pack>true</Pack>
            <PackagePath>runtimes</PackagePath>
        </Content>
    </ItemGroup>

    <ItemGroup>
      <None Remove="raylib.dll" />
    </ItemGroup>

    <ItemGroup>
      <Content Include="raylib.dll">
        <PackagePath>runtimes</PackagePath>
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        <Pack>false</Pack>
      </Content>
    </ItemGroup>

    <ItemGroup>
      <None Include="..\..\.assets\raylib-csharp-vinculum_logo_256x256.png" Link="build\raylib-csharp-vinculum_logo_256x256.png">
        <Pack>True</Pack>
        <PackagePath>\</PackagePath>
      </None>
      <None Include="..\..\README.md">
        <Pack>True</Pack>
        <PackagePath>\</PackagePath>
      </None>
    </ItemGroup>

    <ItemGroup>
      <Content Update="runtimes\win-x64\native\raylib.dll">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </Content>
    </ItemGroup>

    <ItemGroup>
      <Folder Include="build\" />
    </ItemGroup>

</Project>
